/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    `java-library`
    `maven-publish`
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/evantill/sample-lib")
            credentials {
                username = "GITHUB_ACTOR".byProperty
                password = "GITHUB_TOKEN".byProperty
            }
        }
    }

    publications {
        create<MavenPublication>("sampleLib") {

            from(components["java"])

            pom {
                name.set("Sample Library")
                description.set("Sample library build using gradle and github workflow")
                url.set("https://github.com/evantill/sample-lib")
                licenses {
                    license {
                        name.set("The Apache License, Version 2.0")
                        url.set("http://www.apache.org/licenses/LICENSE-2.0.txt")
                    }
                }
                developers {
                    developer {
                        id.set("evantill")
                        name.set("Eric Vantillard")
                        email.set("eric.vantillard@evaxion.fr")
                    }
                }
                scm {
                    connection.set("scm:git:https://github.com/evantill/sample-lib.git")
                    developerConnection.set("scm:git:git@github.com:evantill/sample-lib.git")
                    url.set("https://github.com/evantill/sample-lib")
                }
            }
        }
    }
}

group = "com.github.evantill"
version = "0.0.2-SNAPSHOT"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api("org.apache.commons:commons-math3:3.6.1")

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation("com.google.guava:guava:31.1-jre")
}

testing {
    suites {
        // Configure the built-in test suite
        val test by getting(JvmTestSuite::class) {
            // Use JUnit Jupiter test framework
            useJUnitJupiter("5.9.1")
        }
    }
}

val String.byProperty: String get() = providers.gradleProperty(this).orNull ?: error("missing property " + this)
